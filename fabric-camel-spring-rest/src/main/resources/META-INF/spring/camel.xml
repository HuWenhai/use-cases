<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cxf="http://camel.apache.org/schema/cxf"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">

    <cxf:rsServer id="rsServer"
                  address="http://localhost:9090/rest"
                  serviceClass="com.redhat.gpe.demo.camel.CustomerServiceResource"
                  loggingFeatureEnabled="true">
        <cxf:providers>
            <bean id="jsonProvider" class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider"/>
        </cxf:providers>
        <cxf:outInterceptors>
            <bean class="com.redhat.gpe.demo.camel.EnableCORSInterceptor"/>
        </cxf:outInterceptors>
        <cxf:features>
            <bean class="io.fabric8.cxf.endpoint.SwaggerFeature">
                <property name="title" value="Red Hat :: Demo - Customer Service" />
                <property name="description" value="Sample REST-based Customer Service" />
                <property name="version" value="${project.version}" />
                <property name="runAsFilter" value="true" />
            </bean>
        </cxf:features>
    </cxf:rsServer>

    <bean id="customerServiceBean" class="com.redhat.gpe.demo.camel.CustomerServiceBean"/>

    <camelContext trace="false" id="camel-spring-rest" xmlns="http://camel.apache.org/schema/spring">

        <route>
            <from uri="cxfrs:bean:rsServer"/>
            <choice>
                <when>
                    <simple>${header.operationName} == 'getCustomer'</simple>
                    <bean ref="customerServiceBean" method="getCustomer"/>
                </when>
                <when>
                    <simple>${header.operationName} == 'updateCustomer'</simple>
                    <bean ref="customerServiceBean" method="updateCustomer"/>
                </when>
                <when>
                    <simple>${header.operationName} == 'addCustomer'</simple>
                    <bean ref="customerServiceBean" method="addCustomer"/>
                </when>
                <when>
                    <simple>${header.operationName} == 'deleteCustomer'</simple>
                    <bean ref="customerServiceBean" method="deleteCustomer"/>
                </when>
            </choice>
        </route>
    </camelContext>
</beans>