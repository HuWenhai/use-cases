<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cxf="http://camel.apache.org/schema/cxf"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd http://camel.apache.org/schema/cxf http://camel.apache.org/schema/cxf/camel-cxf.xsd">

    <!-- address="http://localhost:9090/rest" -->
    <!-- address="/rest"-->
    <cxf:rsServer id="rsServer"
                  address="http://localhost:9090/rest"
                  serviceClass="com.redhat.gpe.demo.camel.CustomerServiceResource"
                  loggingFeatureEnabled="true">
        <cxf:providers>
            <bean id="jsonProvider" class="org.apache.cxf.jaxrs.provider.json.JSONProvider"/>
            <!-- Swagger writers -->
            <bean id="resourceWriter" class="com.wordnik.swagger.jaxrs.listing.ResourceListingProvider" />
            <bean id="apiWriter" class="com.wordnik.swagger.jaxrs.listing.ApiDeclarationProvider" />
        </cxf:providers>
        <cxf:serviceBeans>
            <!-- Swagger API listing resource -->
            <bean id="swaggerResourceJSON" class="com.wordnik.swagger.jaxrs.listing.ApiListingResourceJSON" />
            <bean id="cusromerService" class="com.redhat.gpe.demo.camel.CustomerServiceResource" />"
        </cxf:serviceBeans>
    </cxf:rsServer>

    <bean id="customerServiceBean" class="com.redhat.gpe.demo.camel.CustomerServiceBean"/>

    <camelContext trace="false" id="camel-rest-3" xmlns="http://camel.apache.org/schema/spring">

        <route>
            <from uri="cxfrs:bean:rsServer"/>
            <choice>
                <when>
                    <simple>${header.operationName} == 'getCustomer'</simple>
                    <bean ref="customerServiceBean" method="getCustomer"/>
                </when>
                <when>
                    <simple>${header.operationName} == 'updateCustomer'</simple>
                    <bean ref="customerServiceBean" method="updateCustomer"/>
                </when>
                <when>
                    <simple>${header.operationName} == 'addCustomer'</simple>
                    <bean ref="customerServiceBean" method="addCustomer"/>
                </when>
                <when>
                    <simple>${header.operationName} == 'deleteCustomer'</simple>
                    <bean ref="customerServiceBean" method="deleteCustomer"/>
                </when>
            </choice>
        </route>
    </camelContext>

</beans>