<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.redhat.demo</groupId>
    <artifactId>fabric2-camel-rest</artifactId>
    <version>1.0</version>
    <packaging>war</packaging>
    <name>RedHat TUG Demo :: Fabric V2 Camel Rest</name>

    <properties>
<!--        <cxf.version>3.0.4</cxf.version> -->
        <camel.version>2.15.2</camel.version>
        <jetty9-version>9.2.9.v20150224</jetty9-version>
        <logback-version>1.1.2</logback-version>
        <docker.maven.plugin.version>0.11.5</docker.maven.plugin.version>

        <swagger-ui.version>2.0.24</swagger-ui.version>
        <swagger.url>https://github.com/swagger-api/swagger-ui/archive/v${swagger-ui.version}</swagger.url>
        <destDir>target/swagger-ui</destDir>

        <skipTests>true</skipTests>

        <!-- the version of the BOM, defining all the dependency versions -->
        <fabric8.version>2.1.10</fabric8.version>

        <docker.from>fabric8/tomcat-8.0</docker.from>

        <docker.image>fabric8/${project.artifactId}:${project.version}</docker.image>
        <docker.assemblyDescriptorRef>rootWar</docker.assemblyDescriptorRef>
        <docker.port.container.jolokia>8778</docker.port.container.jolokia>
        <docker.port.container.http>8080</docker.port.container.http>

        <fabric8.replicationController.name>quickstart-camel-cxf-rest</fabric8.replicationController.name>
        <fabric8.iconRef>icons/tomcat.svg</fabric8.iconRef>

        <fabric8.service.name>quickstart-camelcxfrest</fabric8.service.name>
        <fabric8.service.port>9101</fabric8.service.port>
        <fabric8.service.containerPort>8080</fabric8.service.containerPort>

        <fabric8.label.component>quickStartCamelCXFRest</fabric8.label.component>
        <fabric8.label.group>quickstarts</fabric8.label.group>
    </properties>
    
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-project</artifactId>
                <version>${fabric8.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-spring</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cxf</artifactId>
        </dependency>

        <!-- CXF -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-frontend-jaxrs</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-transports-http-jetty</artifactId>
        </dependency>

        <!-- JSON Provider -->
        <dependency>
            <groupId>org.apache.cxf</groupId>
            <artifactId>cxf-rt-rs-extension-providers</artifactId>
        </dependency>
        <dependency>
            <groupId>org.codehaus.jettison</groupId>
            <artifactId>jettison</artifactId>
            <version>1.3.6</version>
        </dependency>

        <!-- Client -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.3.6</version>
        </dependency>

        <!-- logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback-version}</version>
        </dependency>
        <!-- Unit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>

            <!-- Step 1. - Download Swagger UI project from GitHub -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>download-single</goal>
                        </goals>
                        <configuration>
                            <url>${swagger.url}</url>
                            <fromFile>v${swagger-ui.version}.tar.gz</fromFile>
                            <toFile>${project.build.directory}/swagger-ui-${swagger-ui.version}.tar.gz</toFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Step 2. -  Decompress content and move it to target/swagger-ui folder -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Decompress archive" />
                                <gunzip src="${project.build.directory}/swagger-ui-${swagger-ui.version}.tar.gz" />
                                <untar src="${project.build.directory}/swagger-ui-${swagger-ui.version}.tar" dest="${project.build.directory}" />
                                <echo message="moving resources" />
                                <move todir="${destDir}" overwrite="yes">
                                    <fileset dir="${project.build.directory}/swagger-ui-${swagger-ui.version}/dist" />
                                </move>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Step 3. Copy Web Resources to target/classes but also to target/swagger-ui -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes/</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/webapp</directory>
                                    <filtering>false</filtering>
                                </resource>
                                <!-- Copy swagger-ui resources to classes directory to be able to use it with mvn jetty:run -->
                                <resource>
                                    <directory>${destDir}</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Step 4. Add Swagger-ui Resources to the WAR -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>target/swagger-ui/</directory>
                            <includes>
                                <include>**/*.*</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <name>${docker.image}</name>
                            <build>
                                <from>${docker.from}</from>
                                <assembly>
                                    <descriptorRef>${docker.assemblyDescriptorRef}</descriptorRef>
                                </assembly>
                                <env>
                                    <CATALINA_OPTS>-javaagent:/opt/tomcat/jolokia-agent.jar=host=0.0.0.0,port=8778,policyLocation=jar:file:///maven/ROOT.war!/WEB-INF/classes/jolokia-access.xml</CATALINA_OPTS>
                                </env>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>

<!--            <plugin>
                <groupId>org.apache.camel</groupId>
                <artifactId>camel-maven-plugin</artifactId>
                <version>${camel.version}</version>
                <configuration>
                </configuration>
            </plugin>-->

            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <name>${docker.image}</name>
                            <build>
                                <from>${docker.from}</from>
                                <assembly>
                                    <descriptorRef>${docker.assemblyDescriptorRef}</descriptorRef>
                                </assembly>
                                <env>
                                    <CATALINA_OPTS>-javaagent:/opt/tomcat/jolokia-agent.jar=host=0.0.0.0,port=8778,policyLocation=jar:file:///maven/ROOT.war!/WEB-INF/classes/jolokia-access.xml</CATALINA_OPTS>
                                </env>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.version}</version>
                <executions>
                    <execution>
                        <id>json</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>json</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>attach</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty9-version}</version>
                <configuration>
                    <webAppSourceDirectory>target/classes</webAppSourceDirectory>
                </configuration>
            </plugin>

        </plugins>

    </build>

    <repositories>
        <repository>
            <id>Maven Central</id>
            <url>http://repo1.maven.org/maven2/</url>
        </repository>
    </repositories>

</project>